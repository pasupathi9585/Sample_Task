[{"D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\index.js":"1","D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\reportWebVitals.js":"2","D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\App.js":"3","D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\formLayout.js":"4","D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\SearchBar.js":"5","D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\Table.js":"6","D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\GraphComponent.js":"7"},{"size":547,"mtime":1611330926916,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":4544,"mtime":1611395688180,"results":"11","hashOfConfig":"9"},{"size":6865,"mtime":1611383364201,"results":"12","hashOfConfig":"9"},{"size":5633,"mtime":1611395765809,"results":"13","hashOfConfig":"9"},{"size":2390,"mtime":1611375098804,"results":"14","hashOfConfig":"9"},{"size":2608,"mtime":1611398450324,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1t9m7xf",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\index.js",[],["32","33"],"D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\reportWebVitals.js",[],"D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\App.js",["34"],"D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\formLayout.js",["35"],"import '../App.css';\r\nimport React  from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from \"react-bootstrap/Button\"\r\nimport {Row, Col} from \"react-bootstrap\"\r\n\r\nclass FormLayout extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name: this.props.fomData && this.props.fomData.name ?this.props.fomData.name : \"\",\r\n            email: this.props.fomData && this.props.fomData.email ?this.props.fomData.email : \"\",\r\n            salary: this.props.fomData && this.props.fomData.salary ?this.props.fomData.salary : \"\",\r\n            designation: this.props.fomData && this.props.fomData.designation ?this.props.fomData.designation : \"Frontend Developer\",\r\n            errors:{\r\n                name: \"\",\r\n                email: \"\",\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        this.props.onChangeAction(this.state)\r\n    }\r\n\r\n    onChangeAction = (e) =>{\r\n        const {id, value} = e.target;\r\n        this.setState({\r\n            [id]: value\r\n        },()=>{\r\n            this.props.onChangeAction(this.state)\r\n        })\r\n    }\r\n\r\n    onClickSubmit = () => {\r\n        if(this.handleValidation()) {\r\n            this.props.onClickSubmit(this.props.modal ? \"Edit\" : \"\")\r\n        }  \r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if(!fields[\"name\"]){\r\n           formIsValid = false;\r\n           errors[\"name\"] = \"Cannot be empty\";\r\n        }else if(typeof fields[\"name\"] !== \"undefined\"){\r\n           if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters\";\r\n           }        \r\n        }\r\n   \r\n        //Email\r\n        if(!fields[\"email\"]){\r\n           formIsValid = false;\r\n           errors[\"email\"] = \"Cannot be empty\";\r\n        }else if(typeof fields[\"email\"] !== \"undefined\"){\r\n           let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n           let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n\r\n           if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n              formIsValid = false;\r\n              errors[\"email\"] = \"Email is not valid\";\r\n            }\r\n       }  \r\n\r\n       //salary\r\n       if(!fields[\"salary\"]){\r\n            formIsValid = false;\r\n            errors[\"salary\"] = \"Cannot be empty\";\r\n        }\r\n\r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n\r\n    onClear = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            salary: \"\",\r\n            designation: \"Frontend Developer\",\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Row className={\"margin_50\"}>\r\n                    <Col lg={this.props.modal ? \"1\" : \"4\"}>\r\n                    </Col>\r\n                    \r\n                    <Col lg={this.props.modal ? \"10\" : \"4\"}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label className= {\"displayflex\"}>Name</Form.Label>\r\n                            <Form.Control\r\n                                id= \"name\"\r\n                                value={this.state.name}\r\n                                type=\"text\" \r\n                                placeholder=\"Enter Your Name\" \r\n                                onChange={this.onChangeAction}/>\r\n                                {this.state.errors.name !== \"\" ?\r\n                                <Form.Text className=\"codered \">\r\n                                    {this.state.errors.name}\r\n                                </Form.Text> : \"\"\r\n                                }\r\n                                \r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label className= {\"displayflex\"}>Email</Form.Label>\r\n                            <Form.Control \r\n                                id=\"email\"\r\n                                value={this.state.email}\r\n                                type=\"email\" \r\n                                placeholder=\"Enter Your email\"\r\n                                onChange={this.onChangeAction}\r\n                                />\r\n                                {this.state.errors.email !== \"\" ?\r\n                                <Form.Text className=\"codered\">\r\n                                    {this.state.errors.email}\r\n                                </Form.Text> : \"\"\r\n                                }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label className= {\"displayflex\"}>Salary</Form.Label>\r\n                            <Form.Control \r\n                                id=\"salary\" \r\n                                value={this.state.salary}\r\n                                type=\"number\" \r\n                                placeholder=\"Enter Your Salary\"\r\n                                onChange={this.onChangeAction} />\r\n                                {this.state.errors.salary !== \"\" ?\r\n                                <Form.Text className=\"codered\">\r\n                                    {this.state.errors.salary}\r\n                                </Form.Text> : \"\"\r\n                                }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label className= {\"displayflex\"}>Designation</Form.Label>\r\n                            <Form.Control as=\"select\"\r\n                                id=\"designation\"\r\n                                value={this.state.designation}\r\n                                onChange={this.onChangeAction}>\r\n                                <option>Frontend Developer</option>\r\n                                <option>Backend Developer</option>\r\n                                <option>Designer</option>\r\n                                <option>Software tester</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.onClickSubmit}>\r\n                            Submit\r\n                        </Button>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" className = {\"margin-left-20\"} onClick={this.onClear}>\r\n                            Clear\r\n                        </Button>\r\n                    </Col>\r\n\r\n                    <Col lg={this.props.modal ? \"1\" : \"4\"}>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormLayout\r\n\r\n","D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\SearchBar.js",["36"],"D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\Table.js",[],"D:\\webapp\\web_apps\\test_\\react\\my-app\\src\\Layouts\\GraphComponent.js",["37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":7,"column":16,"nodeType":"46","messageId":"47","endLine":7,"endColumn":22},{"ruleId":"48","severity":1,"message":"49","line":66,"column":91,"nodeType":"50","messageId":"51","endLine":66,"endColumn":93},{"ruleId":"48","severity":1,"message":"49","line":43,"column":91,"nodeType":"50","messageId":"51","endLine":43,"endColumn":93},{"ruleId":"44","severity":1,"message":"52","line":3,"column":9,"nodeType":"46","messageId":"47","endLine":3,"endColumn":13},{"ruleId":"44","severity":1,"message":"53","line":25,"column":17,"nodeType":"46","messageId":"47","endLine":25,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":25,"column":22,"nodeType":"56","messageId":"57","endLine":28,"endColumn":15},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'obj' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]